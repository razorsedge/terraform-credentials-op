#!/bin/bash
# Install 1Password CLI and jq.
#
# https://www.terraform.io/docs/internals/credentials-helpers.html
set -uo pipefail
RETVAL=-1

# Function to print the help screen.
print_help() {
  echo "Terraform credentials helper that reads or stores tokens from 1Password." 1>&2
  echo "Usage:  terraform-credentials-op <get|store|forget> <hostname>" 1>&2
}

if [[ $# -ne 2 ]]; then
  print_help
  exit 10
fi

_verb=$1
_hostname=$2

if ! command -v op &>/dev/null
then
  echo "ERROR: op could not be found. Please install 1Password CLI and add to the PATH." 1>&2
  exit 11
fi

if ! command -v jq &>/dev/null
then
  echo "ERROR: jq could not be found. Please install jq and add to the PATH." 1>&2
  exit 12
fi

op whoami &>/dev/null
RETVAL=$?
if [ $RETVAL -ne 0 ]; then
  echo "ERROR: no account found for filter.  Try 'op signin' to log in." 1>&2
  exit $RETVAL
fi

case $_verb in
  get)
    # Read the item, even if it does not exist.
    _token=$(op item get "Terraform Cloud $_hostname" --fields label=credential 2>/dev/null)
    RETVAL=$?
    # If data was retreived, then pass it on as JSON, otherwise pass empty JSON.
    if [[ -n "$_token" ]]; then
      printf '{"token":"%s"}\n' "$_token"
    else
      echo '{}'
      RETVAL=0
    fi
    ;;
  store)
    # Read the STDIN as per specification.
    _token=$(cat | jq -r '.token')
    # Check if there is an item already and if so, then exit.
    op item list --categories "API Credential" --tags terraform-credentials-op | grep -q "Terraform Cloud $_hostname"
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
      echo "ERROR: Entry already exists in 1Password for the item." 1>&2
      exit 13
    fi
    # Store the item.
    op item template get 'API Credential' | \
    op item create --title "Terraform Cloud $_hostname" --tags terraform-credentials-op --url "https://$_hostname/" credential="$_token" >/dev/null 2>&1
    #expires=2000-01-01 "valid from"=2000-01-01
    RETVAL=$?
    ;;
  forget)
    # Forget the item even if it does not exist.
    op item delete "Terraform Cloud $_hostname" 2>/dev/null
    RETVAL=$?
    RETVAL=0
    ;;
  *)
    print_help
    RETVAL=1
    ;;
esac
exit $RETVAL

